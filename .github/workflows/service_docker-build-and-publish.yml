on:
  workflow_call:
    inputs:
      platforms:
        type: string
        default: 'linux/amd64,linux/arm/v7,linux/arm64/v8'
      docker-tags:
        required: true
        type: string
      dockerfile:
        type: string
        default: './Dockerfile'
      target:
        type: string
        default: 'deploy'

jobs:
  php-build-and-test:
    uses: ./.github/workflows/service_tests-phpunit.yml

  node-build:
    uses: ./.github/workflows/service_node-install.yml

  docker-publish:
    runs-on: ubuntu-22.04
    needs:
      - php-build-and-test
      - node-build
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore composer cache
        uses: actions/cache/restore@v3
        env:
          cache-name: composer-vendor
        with:
          path: ./vendor
          fail-on-cache-miss: true
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Restore node_modules cache
        uses: actions/cache/restore@v3
        env:
          cache-name: node-modules
        with:
          path: ./node_modules/
          fail-on-cache-miss: true
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: docker-build-action
        uses: serversideup/github-action-docker-build@v3
        with:
          tags: "${{ inputs.docker-tags }}"
          dockerfile: "${{ inputs.dockerfile }}"
          registry-username: ${{ secrets.DOCKER_HUB_USERNAME }}
          registry-token: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          platforms: "${{ inputs.platforms }}"
          target: "${{ inputs.target }}"